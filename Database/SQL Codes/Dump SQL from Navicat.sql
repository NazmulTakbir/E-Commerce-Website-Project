/*
 Navicat Premium Data Transfer

 Source Server         : CSE 216
 Source Server Type    : Oracle
 Source Server Version : 110200
 Source Host           : localhost:1521
 Source Schema         : ZARAD

 Target Server Type    : Oracle
 Target Server Version : 110200
 File Encoding         : 65001

 Date: 12/12/2020 15:10:37
*/


-- ----------------------------
-- Table structure for ADMIN
-- ----------------------------
DROP TABLE "ZARAD"."ADMIN";
CREATE TABLE "ZARAD"."ADMIN" (
  "EMPLOYEE_ID" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ADVERTISEMENT
-- ----------------------------
DROP TABLE "ZARAD"."ADVERTISEMENT";
CREATE TABLE "ZARAD"."ADVERTISEMENT" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "ADVERTISEMENT_NUMBER" NUMBER NOT NULL,
  "START_DATE" DATE NOT NULL,
  "END_DATE" DATE NOT NULL,
  "COST_FOR_SELLER" NUMBER NOT NULL,
  "PICTURE" BLOB NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CART_ITEM
-- ----------------------------
DROP TABLE "ZARAD"."CART_ITEM";
CREATE TABLE "ZARAD"."CART_ITEM" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "CUSTOMER_ID" NUMBER NOT NULL,
  "QUANTITY" NUMBER
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CATEGORY
-- ----------------------------
DROP TABLE "ZARAD"."CATEGORY";
CREATE TABLE "ZARAD"."CATEGORY" (
  "CATEGORY_ID" NUMBER NOT NULL,
  "CATEGORY_NAME" VARCHAR2(50 BYTE) NOT NULL,
  "PICTURE" BLOB
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMER
-- ----------------------------
DROP TABLE "ZARAD"."CUSTOMER";
CREATE TABLE "ZARAD"."CUSTOMER" (
  "CUSTOMER_ID" NUMBER NOT NULL,
  "FIRST_NAME" VARCHAR2(20 BYTE) NOT NULL,
  "LAST_NAME" VARCHAR2(20 BYTE) NOT NULL,
  "APARTMENT_NUMBER" VARCHAR2(10 BYTE),
  "BUILDING_NUMBER" VARCHAR2(10 BYTE),
  "ROAD" VARCHAR2(30 BYTE),
  "AREA" VARCHAR2(30 BYTE) NOT NULL,
  "CITY" VARCHAR2(30 BYTE) NOT NULL,
  "PHONE_NUMBER" VARCHAR2(14 BYTE) NOT NULL,
  "DOB" DATE NOT NULL,
  "EMAIL_ID" VARCHAR2(40 BYTE) NOT NULL,
  "LOCATION" VARCHAR2(50 BYTE) NOT NULL,
  "PASSWORD" VARCHAR2(150 BYTE) NOT NULL,
  "PICTURE" BLOB,
  "SALT" VARCHAR2(150 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMER_CARE_EMPLOYEE
-- ----------------------------
DROP TABLE "ZARAD"."CUSTOMER_CARE_EMPLOYEE";
CREATE TABLE "ZARAD"."CUSTOMER_CARE_EMPLOYEE" (
  "EMPLOYEE_ID" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMER_CASH_TRANSACTION
-- ----------------------------
DROP TABLE "ZARAD"."CUSTOMER_CASH_TRANSACTION";
CREATE TABLE "ZARAD"."CUSTOMER_CASH_TRANSACTION" (
  "TRANSACTION_ID" NUMBER NOT NULL,
  "ORDER_ID" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMER_ORDER
-- ----------------------------
DROP TABLE "ZARAD"."CUSTOMER_ORDER";
CREATE TABLE "ZARAD"."CUSTOMER_ORDER" (
  "ORDER_ID" NUMBER NOT NULL,
  "CUSTOMER_ID" NUMBER NOT NULL,
  "ORDER_DATE" DATE NOT NULL,
  "SELLER_ID" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for CUSTOMER_WALLET_RECHARGE
-- ----------------------------
DROP TABLE "ZARAD"."CUSTOMER_WALLET_RECHARGE";
CREATE TABLE "ZARAD"."CUSTOMER_WALLET_RECHARGE" (
  "TRANSACTION_ID" NUMBER NOT NULL,
  "CUSTOMER_ID" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for DELIVERY_GUY
-- ----------------------------
DROP TABLE "ZARAD"."DELIVERY_GUY";
CREATE TABLE "ZARAD"."DELIVERY_GUY" (
  "EMPLOYEE_ID" NUMBER NOT NULL,
  "CURRENT_LOCATION" VARCHAR2(100 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for EMPLOYEE
-- ----------------------------
DROP TABLE "ZARAD"."EMPLOYEE";
CREATE TABLE "ZARAD"."EMPLOYEE" (
  "EMPLOYEE_ID" NUMBER NOT NULL,
  "FIRST_NAME" VARCHAR2(20 BYTE) NOT NULL,
  "LAST_NAME" VARCHAR2(20 BYTE) NOT NULL,
  "SALARY" NUMBER NOT NULL,
  "PHONE_NUMBER" VARCHAR2(14 BYTE) NOT NULL,
  "PASSWORD" VARCHAR2(150 BYTE) NOT NULL,
  "APARTMENT_NUMBER" VARCHAR2(10 BYTE),
  "BUILDING_NUMBER" VARCHAR2(10 BYTE),
  "ROAD" VARCHAR2(30 BYTE),
  "AREA" VARCHAR2(30 BYTE) NOT NULL,
  "CITY" VARCHAR2(30 BYTE) NOT NULL,
  "PICTURE" BLOB NOT NULL,
  "EMAIL_ID" VARCHAR2(40 BYTE) NOT NULL,
  "DOB" DATE NOT NULL,
  "SALT" VARCHAR2(150 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for OFFER
-- ----------------------------
DROP TABLE "ZARAD"."OFFER";
CREATE TABLE "ZARAD"."OFFER" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "OFFER_NUMBER" NUMBER NOT NULL,
  "START_DATE" DATE NOT NULL,
  "END_DATE" DATE,
  "PERCENTAGE_DISCOUNT" NUMBER NOT NULL,
  "MINIMUM_QUANTITY_PURCHASED" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for ORDERED_ITEMS
-- ----------------------------
DROP TABLE "ZARAD"."ORDERED_ITEMS";
CREATE TABLE "ZARAD"."ORDERED_ITEMS" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "ORDER_ID" NUMBER NOT NULL,
  "ITEM_NUMBER" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PRODUCT
-- ----------------------------
DROP TABLE "ZARAD"."PRODUCT";
CREATE TABLE "ZARAD"."PRODUCT" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "NAME" VARCHAR2(150 BYTE) NOT NULL,
  "CATEGORY_ID" NUMBER NOT NULL,
  "DESCRIPTION" VARCHAR2(4000 BYTE) NOT NULL,
  "EXPECTED_TIME_TO_DELIVER" VARCHAR2(10 BYTE) NOT NULL,
  "PRICE" NUMBER NOT NULL,
  "LAST_UPDATE" DATE DEFAULT TO_DATE('01/07/2020', 'DD/MM/YYYY') NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PRODUCT_FEATURE
-- ----------------------------
DROP TABLE "ZARAD"."PRODUCT_FEATURE";
CREATE TABLE "ZARAD"."PRODUCT_FEATURE" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "FEATURE_NUMBER" NUMBER NOT NULL,
  "FEATURE_DESCRIPTION" VARCHAR2(4000 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PRODUCT_HISTORY
-- ----------------------------
DROP TABLE "ZARAD"."PRODUCT_HISTORY";
CREATE TABLE "ZARAD"."PRODUCT_HISTORY" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "START_DATE" DATE NOT NULL,
  "END_DATE" DATE NOT NULL,
  "PRICE" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PRODUCT_PICTURE
-- ----------------------------
DROP TABLE "ZARAD"."PRODUCT_PICTURE";
CREATE TABLE "ZARAD"."PRODUCT_PICTURE" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "PICTURE_NUMBER" NUMBER NOT NULL,
  "PICTURE" BLOB
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PRODUCT_UNIT
-- ----------------------------
DROP TABLE "ZARAD"."PRODUCT_UNIT";
CREATE TABLE "ZARAD"."PRODUCT_UNIT" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "ITEM_NUMBER" NUMBER NOT NULL,
  "STATUS" VARCHAR2(50 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for PURCHASE_ORDER
-- ----------------------------
DROP TABLE "ZARAD"."PURCHASE_ORDER";
CREATE TABLE "ZARAD"."PURCHASE_ORDER" (
  "ORDER_ID" NUMBER NOT NULL,
  "DELIVERY_EMPLOYEE_ID" NUMBER NOT NULL,
  "DELIVERED_DATE" DATE,
  "DELIVERY_STATUS" VARCHAR2(20 BYTE) NOT NULL,
  "PAYMENT_METHOD" VARCHAR2(20 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for RETURN_ORDER
-- ----------------------------
DROP TABLE "ZARAD"."RETURN_ORDER";
CREATE TABLE "ZARAD"."RETURN_ORDER" (
  "ORDER_ID" NUMBER NOT NULL,
  "COMPLAINT_DES" VARCHAR2(4000 BYTE),
  "CUSTOMER_CARE_EMPLOYEE_ID" NUMBER NOT NULL,
  "RETURN_DATE" DATE,
  "APPROVAL_STATUS" VARCHAR2(20 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for REVIEW
-- ----------------------------
DROP TABLE "ZARAD"."REVIEW";
CREATE TABLE "ZARAD"."REVIEW" (
  "PRODUCT_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL,
  "CUSTOMER_ID" NUMBER NOT NULL,
  "REVIEW_DATE" DATE NOT NULL,
  "RATING" NUMBER NOT NULL,
  "DESCRIPTION" VARCHAR2(1200 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for SELLER
-- ----------------------------
DROP TABLE "ZARAD"."SELLER";
CREATE TABLE "ZARAD"."SELLER" (
  "SELLER_ID" NUMBER NOT NULL,
  "NAME" VARCHAR2(30 BYTE) NOT NULL,
  "BUILDING_NUMBER" VARCHAR2(10 BYTE),
  "ROAD" VARCHAR2(30 BYTE),
  "AREA" VARCHAR2(30 BYTE) NOT NULL,
  "CITY" VARCHAR2(30 BYTE) NOT NULL,
  "EMAIL_ID" VARCHAR2(40 BYTE) NOT NULL,
  "LOGO" BLOB,
  "WEBSITE" VARCHAR2(50 BYTE),
  "LOCATION" VARCHAR2(50 BYTE) NOT NULL,
  "PASSWORD" VARCHAR2(150 BYTE) NOT NULL,
  "SALT" VARCHAR2(150 BYTE)
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for SELLER_PHONE_NUMBER
-- ----------------------------
DROP TABLE "ZARAD"."SELLER_PHONE_NUMBER";
CREATE TABLE "ZARAD"."SELLER_PHONE_NUMBER" (
  "SELLER_ID" NUMBER NOT NULL,
  "PHONE_NUMBER" VARCHAR2(14 BYTE) NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for SELLER_TRANSACTION
-- ----------------------------
DROP TABLE "ZARAD"."SELLER_TRANSACTION";
CREATE TABLE "ZARAD"."SELLER_TRANSACTION" (
  "TRANSACTION_ID" NUMBER NOT NULL,
  "SELLER_ID" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- Table structure for TRANSACTIONS
-- ----------------------------
DROP TABLE "ZARAD"."TRANSACTIONS";
CREATE TABLE "ZARAD"."TRANSACTIONS" (
  "TRANSACTION_ID" NUMBER NOT NULL,
  "TRANSACTIONS_DATE" DATE NOT NULL,
  "AMOUNT" NUMBER NOT NULL,
  "SERVICE_CHARGE_PERCENTAGE" NUMBER NOT NULL
)
LOGGING
NOCOMPRESS
PCTFREE 10
INITRANS 1
STORAGE (
  INITIAL 65536 
  NEXT 1048576 
  MINEXTENTS 1
  MAXEXTENTS 2147483645
  BUFFER_POOL DEFAULT
)
PARALLEL 1
NOCACHE
DISABLE ROW MOVEMENT
;

-- ----------------------------
-- View structure for CUSTOMER_WALLET
-- ----------------------------
CREATE OR REPLACE VIEW "ZARAD"."CUSTOMER_WALLET" AS SELECT CUSTOMER_ID, WALLET_BALANCE(CUSTOMER_ID, 'CUSTOMER') BALANCE
FROM CUSTOMER;

-- ----------------------------
-- View structure for SELLER_WALLET
-- ----------------------------
CREATE OR REPLACE VIEW "ZARAD"."SELLER_WALLET" AS SELECT SELLER_ID, WALLET_BALANCE(SELLER_ID, 'SELLER') BALANCE
FROM SELLER;

-- ----------------------------
-- Function structure for ADD_ITEM
-- ----------------------------
CREATE OR REPLACE
PROCEDURE "ZARAD"."ADD_ITEM" AS
BEGIN

	SAVEPOINT BEFORE_INSERT;
	
	
	
	IF ID = -1 THEN
		SELECT PRODUCT_ID_SEQ.NEXTVAL INTO VERIFIED_ID FROM DUAL;
	ELSE
		SELECT NVL(PRODUCT_ID, -1) INTO VERIFIED_ID FROM PRODUCT WHERE PRODUCT_ID = ID;
		IF VERIFIED_ID = -1 THEN
			SELECT PRODUCT_ID_SEQ.NEXTVAL INTO VERIFIED_ID FROM DUAL;
		END IF;
	END IF;
	
	
	
	SELECT SELLER_ID INTO SID FROM SELLER WHERE EMAIL_ID = SELLER_EMAIL;
	
	
	
	INSERT INTO PRODUCT VALUES (VERIFIED_ID, SID, NAME, (SELECT CATEGORY_ID FROM CATEGORY WHERE 
	CATEGORY_NAME = CATEGORY), DESCRIPTION, DELIVERY_TIME, PRICE, SYSDATE);
	
	
	
	FEATURE_NUMBER := 0;
	
	IF NOT FEATURE1 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE1);
	END IF;
	
	IF NOT FEATURE2 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE2);
	END IF;
	
	IF NOT FEATURE3 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE3);
	END IF;
	
	IF NOT FEATURE4 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE4);
	END IF;
	
	IF NOT FEATURE5 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE5);
	END IF;
	
	IF NOT FEATURE6 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE6);
	END IF;
								
								
								
	PICTURE_NUMBER := 0;
	
	IF PIC1 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC1);
	END IF;
	
	IF PIC2 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC2);
	END IF;
	
	IF PIC3 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC3);
	END IF;
	
	IF PIC4 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC4);
	END IF;
	
	IF IN_STOCK > 0 THEN
		VERIFIED_IN_STOCK := LEAST(IN_STOCK, 1000000);
		FOR ITEM_NO IN 1..VERIFIED_IN_STOCK
		LOOP
			INSERT INTO PRODUCT_UNIT VALUES(VERIFIED_ID, SID, ITEM_NO, 'Not Sold');
		END LOOP;
	END IF;
								
EXCEPTION
	WHEN OTHERS THEN
		ROLLBACK TO BEFORE_INSERT;
		RAISE;
END;
/

-- ----------------------------
-- Function structure for AVG_RATING
-- ----------------------------
CREATE OR REPLACE
FUNCTION "ZARAD"."AVG_RATING" AS
BEGIN 
	SELECT ROUND(AVG(RATING),1) INTO RESULT FROM REVIEW WHERE PRODUCT_ID = P_ID AND SELLER_ID = S_ID ;
	RETURN RESULT;
END;
/

-- ----------------------------
-- Function structure for HAVERSINE
-- ----------------------------
CREATE OR REPLACE
FUNCTION "ZARAD"."HAVERSINE" AS
BEGIN
	SELECT LOCATION INTO LOCATION1 FROM SELLER WHERE SELLER_ID = 
	(SELECT SELLER_ID FROM CUSTOMER_ORDER WHERE ORDER_ID = OID); 
	PI := 3.14159265358979;
	DIS_MIN := PI * 6371;
	POS := INSTR(LOCATION1 , ',');
	LAT1 := SUBSTR(LOCATION1, 1, POS-1);
	LON1 := SUBSTR(LOCATION1, POS+1);
	LAT1 := LAT1 * PI / 180;
	FOR R IN (SELECT CURRENT_LOCATION, EMPLOYEE_ID FROM DELIVERY_GUY )
	LOOP
		LOCATION2 := R.CURRENT_LOCATION;
		POS := INSTR(LOCATION2 , ',');
		LAT2 := SUBSTR(LOCATION2, 1, POS-1);
		LON2 := SUBSTR(LOCATION2, POS+1);
		DIF1 := (LAT1 - LAT2) * PI / 180;
		DIF2 := (LON1 - LON2) * PI / 180;
		LAT2 := LAT2 * PI /180;
		DIS := POWER(SIN(DIF1/2), 2) + POWER(SIN(DIF2/2), 2) * COS(LAT1) * COS(LAT2);
		DIS := ROUND(2 * 6371 * ASIN(SQRT(DIS)), 5);
		IF DIS_MIN > DIS THEN
			DIS_MIN := DIS;
			ID := R.EMPLOYEE_ID;
		END IF;
	END LOOP ;
	RETURN ID;
END ;
/

-- ----------------------------
-- Function structure for MAX_DISCOUNT
-- ----------------------------
CREATE OR REPLACE
FUNCTION "ZARAD"."MAX_DISCOUNT" AS
BEGIN 
	SELECT MAX(PERCENTAGE_DISCOUNT) INTO RESULT FROM OFFER WHERE PRODUCT_ID = P_ID AND SELLER_ID = S_ID AND START_DATE <= SYSDATE AND END_DATE >= SYSDATE;
	RETURN RESULT;
END;
/

-- ----------------------------
-- Function structure for ORDER_STATUS
-- ----------------------------
CREATE OR REPLACE
FUNCTION "ZARAD"."ORDER_STATUS" AS
BEGIN

	SELECT COUNT(*) INTO temp FROM RETURN_ORDER
	WHERE ORDER_ID = ID;
	
	IF temp = 1 THEN
	
		SELECT APPROVAL_STATUS INTO status FROM RETURN_ORDER 
		WHERE ORDER_ID = ID;
		
	ELSE
	
		SELECT DELIVERY_STATUS INTO status FROM PURCHASE_ORDER
		WHERE ORDER_ID = ID;
	
	END IF;
	
	RETURN status;
	
END;
/

-- ----------------------------
-- Function structure for ORDER_TOTAL
-- ----------------------------
CREATE OR REPLACE
FUNCTION "ZARAD"."ORDER_TOTAL" AS
BEGIN
	
	SELECT SUM(B.PRICE) INTO total_amount FROM 
	( SELECT PRODUCT_ID, SELLER_ID FROM ORDERED_ITEMS WHERE ORDER_ID = O_ID ) A
	JOIN PRODUCT B ON (A.PRODUCT_ID=B.PRODUCT_ID AND A.SELLER_ID=B.SELLER_ID );
	
	SELECT SUM(B.PRICE) INTO total_amount2 FROM
	( SELECT PRODUCT_ID, SELLER_ID FROM ORDERED_ITEMS WHERE ORDER_ID = O_ID) A
	JOIN PRODUCT_HISTORY B ON (A.PRODUCT_ID=B.PRODUCT_ID AND A.SELLER_ID=B.SELLER_ID ) 
	WHERE B.START_DATE <= (SELECT ORDER_DATE FROM CUSTOMER_ORDER WHERE ORDER_ID = O_ID) AND      
	B.END_DATE >= (SELECT ORDER_DATE FROM CUSTOMER_ORDER WHERE ORDER_ID = O_ID);
	
	IF total_amount2 IS NOT NULL THEN
		total_amount := total_amount2;
	END IF;
	
	SELECT COUNT(*) INTO temp2 FROM ORDERED_ITEMS WHERE ORDER_ID = ORDER_ID; 
	
	SELECT MAX(PERCENTAGE_DISCOUNT) INTO temp FROM OFFER JOIN ORDERED_ITEMS 
	USING(PRODUCT_ID, SELLER_ID) JOIN CUSTOMER_ORDER USING(ORDER_ID) 
	WHERE ORDER_ID = O_ID AND START_DATE <= ORDER_DATE AND END_DATE>=ORDER_DATE 
	AND temp2 >= MINIMUM_QUANTITY_PURCHASED;
	
	IF NOT temp IS NULL THEN
		total_amount := total_amount * (1-temp/100); 
	END IF;
	
	total_amount := FLOOR( total_amount );
	
	RETURN total_amount;
	
END ;
/

-- ----------------------------
-- Function structure for STRING_SIMILARITY
-- ----------------------------
CREATE OR REPLACE
FUNCTION "ZARAD"."STRING_SIMILARITY" AS
BEGIN

	i := 1;
	current_delimiter := 0;
	previous_delimiter := 0;
	
	WHILE i <= LENGTH(search_string)
	LOOP
	
		IF SUBSTR(search_string, i, 1) = delimiter THEN
			current_delimiter := i;
			temp := SUBSTR( search_string, previous_delimiter+1, current_delimiter-previous_delimiter-1 );
			search_words.extend(1);
			sw_count := sw_count + 1;
			search_words(sw_count) := temp;
			previous_delimiter := current_delimiter;
		END IF;
		
		i := i + 1;
	END LOOP;
	
	temp := SUBSTR( search_string, previous_delimiter+1, LENGTH(search_string)-previous_delimiter );
	search_words.extend(1);
	sw_count := sw_count + 1;
	search_words(sw_count) := temp;
	
	
	
	
	i := 1;
	current_delimiter := 0;
	previous_delimiter := 0;
	
	WHILE i <= LENGTH(product_string)
	LOOP
	
		IF SUBSTR(product_string, i, 1) = delimiter THEN
			current_delimiter := i;
			temp := SUBSTR( product_string, previous_delimiter+1, current_delimiter-previous_delimiter-1 );
			product_words.extend(1);
			pw_count := pw_count + 1;
			product_words(pw_count) := temp;
			previous_delimiter := current_delimiter;
		END IF;
		
		i := i + 1;
	END LOOP;
	
	temp := SUBSTR( product_string, previous_delimiter+1, LENGTH(product_string)-previous_delimiter );
	product_words.extend(1);
	pw_count := pw_count + 1;
	product_words(pw_count) := temp;

	i := 1;
	WHILE i <= sw_count
	LOOP
		score := 0;
		
		IF LOWER(product_string) LIKE CONCAT( CONCAT( '%', LOWER(search_words(i)) ), '%' ) THEN
			score := 1;
		ELSE
			j := 1;
			WHILE j <= pw_count
			LOOP
				IF UTL_MATCH.edit_distance_similarity( LOWER(search_words(i)), LOWER(product_words(j)) ) > score THEN
					score := UTL_MATCH.edit_distance_similarity( LOWER(search_words(i)), LOWER(product_words(j)) );
				END IF;
				j := j + 1;
			END LOOP;
			
			score := score/100;
			
		END IF;
		
		IF score >= 0.7 THEN
			similarity_score := similarity_score + score;
		END IF;
		
		i := i + 1;
		
	END LOOP;
	
	
	i := 1;
	WHILE i <= pw_count
	LOOP
		score := 0;
		
		IF LOWER(search_string) LIKE CONCAT( CONCAT( '%', LOWER(product_words(i)) ), '%' ) THEN
			score := 1;
		ELSE
			j := 1;
			WHILE j <= sw_count
			LOOP
				IF UTL_MATCH.edit_distance_similarity( LOWER(product_words(i)), LOWER(search_words(j)) ) > score THEN
					score := UTL_MATCH.edit_distance_similarity( LOWER(product_words(i)), LOWER(search_words(j)) );
				END IF;
				j := j + 1;
			END LOOP;
			
			score := score/100;
			
		END IF;
		
		IF score >= 0.7 THEN
			similarity_score := similarity_score + score;
		END IF;
		
		i := i + 1;
		
	END LOOP;
	
	
	
	
	score := UTL_MATCH.edit_distance_similarity( search_string, product_string )/100;
	IF score > similarity_score AND score >= 0.7 THEN
			similarity_score := score;
	END IF;
	
	RETURN similarity_score;
END ;
/

-- ----------------------------
-- Function structure for WALLET_BALANCE
-- ----------------------------
CREATE OR REPLACE
FUNCTION "ZARAD"."WALLET_BALANCE" AS
BEGIN
	
	IF AC_TYPE = 'CUSTOMER' THEN
		
		SELECT SUM( ORDER_TOTAL(ORDER_ID) ) INTO temp FROM CUSTOMER_ORDER
		JOIN PURCHASE_ORDER USING(ORDER_ID) WHERE LOWER(PAYMENT_METHOD) = 'wallet' AND 
		(LOWER(DELIVERY_STATUS)	='delivered' OR LOWER(DELIVERY_STATUS) = 'returned' OR 
		LOWER(DELIVERY_STATUS) = 'not delivered') AND CUSTOMER_ID = ID;
		IF NOT temp IS NULL THEN
			balance := balance - temp; 
		END IF;
	
		SELECT SUM( ORDER_TOTAL(ORDER_ID) ) INTO temp FROM CUSTOMER_ORDER 
		JOIN RETURN_ORDER USING(ORDER_ID) WHERE LOWER(APPROVAL_STATUS) = 'approved' 
		AND CUSTOMER_ID = ID;
		IF NOT temp IS NULL THEN
			balance := balance + temp; 
		END IF;
		
		SELECT SUM(AMOUNT) INTO temp FROM TRANSACTIONS JOIN CUSTOMER_WALLET_RECHARGE 
		USING(TRANSACTION_ID) WHERE CUSTOMER_ID = ID;
		IF NOT temp IS NULL THEN
			balance := balance + temp; 
		END IF;
	
	ELSIF AC_TYPE = 'SELLER' THEN
		
		SELECT SUM(COST_FOR_SELLER) INTO temp FROM ADVERTISEMENT
		WHERE SELLER_ID = ID;
		IF NOT temp IS NULL THEN
			balance := balance - temp; 
		END IF;
		
		SELECT SUM( ORDER_TOTAL(ORDER_ID) ) INTO temp FROM CUSTOMER_ORDER JOIN PURCHASE_ORDER
		USING(ORDER_ID) WHERE ( ( LOWER(PAYMENT_METHOD) = 'cash' AND ( LOWER(DELIVERY_STATUS) = 'delivered' 
		OR LOWER(DELIVERY_STATUS) = 'returned') )
		OR ( LOWER(PAYMENT_METHOD) = 'wallet' AND LOWER(DELIVERY_STATUS) != 'cancelled' ) ) AND SELLER_ID = ID;	
		IF NOT temp IS NULL THEN
			balance := balance + temp; 
		END IF;

	  SELECT SUM( ORDER_TOTAL(ORDER_ID) ) INTO temp FROM CUSTOMER_ORDER JOIN RETURN_ORDER
		USING(ORDER_ID) WHERE LOWER(APPROVAL_STATUS) = 'approved' AND SELLER_ID = ID;
		IF NOT temp IS NULL THEN
			balance := balance - temp; 
		END IF;
		
		SELECT SUM(AMOUNT) INTO temp FROM SELLER_TRANSACTION JOIN TRANSACTIONS USING(TRANSACTION_ID)
		WHERE SELLER_ID = ID;
		IF NOT temp IS NULL THEN
			balance := balance + temp; 
		END IF;
		
	END IF;
	
	RETURN balance;
	
END ;
/

-- ----------------------------
-- Sequence structure for CATEGORY_ID_SEQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."CATEGORY_ID_SEQ";
CREATE SEQUENCE "ZARAD"."CATEGORY_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for CUSTOMER_ID_SEQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."CUSTOMER_ID_SEQ";
CREATE SEQUENCE "ZARAD"."CUSTOMER_ID_SEQ" MINVALUE 1 MAXVALUE 9999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for DJANGO_CONTENT_TYPE_SQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."DJANGO_CONTENT_TYPE_SQ";
CREATE SEQUENCE "ZARAD"."DJANGO_CONTENT_TYPE_SQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for DJANGO_MIGRATIONS_SQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."DJANGO_MIGRATIONS_SQ";
CREATE SEQUENCE "ZARAD"."DJANGO_MIGRATIONS_SQ" MINVALUE 1 MAXVALUE 9999999999999999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for EMPLOYEE_ID_SEQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."EMPLOYEE_ID_SEQ";
CREATE SEQUENCE "ZARAD"."EMPLOYEE_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for ORDER_ID_SEQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."ORDER_ID_SEQ";
CREATE SEQUENCE "ZARAD"."ORDER_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for PRODUCT_ID_SEQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."PRODUCT_ID_SEQ";
CREATE SEQUENCE "ZARAD"."PRODUCT_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for SELLER_ID_SEQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."SELLER_ID_SEQ";
CREATE SEQUENCE "ZARAD"."SELLER_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Sequence structure for TRANSACTION_ID_SEQ
-- ----------------------------
DROP SEQUENCE "ZARAD"."TRANSACTION_ID_SEQ";
CREATE SEQUENCE "ZARAD"."TRANSACTION_ID_SEQ" MINVALUE 1 MAXVALUE 999999999999999 INCREMENT BY 1 CACHE 20;

-- ----------------------------
-- Primary Key structure for table ADMIN
-- ----------------------------
ALTER TABLE "ZARAD"."ADMIN" ADD CONSTRAINT "ADMIN_PK" PRIMARY KEY ("EMPLOYEE_ID");

-- ----------------------------
-- Primary Key structure for table ADVERTISEMENT
-- ----------------------------
ALTER TABLE "ZARAD"."ADVERTISEMENT" ADD CONSTRAINT "ADVERTISEMENT_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "ADVERTISEMENT_NUMBER");

-- ----------------------------
-- Checks structure for table ADVERTISEMENT
-- ----------------------------
ALTER TABLE "ZARAD"."ADVERTISEMENT" ADD CONSTRAINT "SYS_C0012029" CHECK ("START_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."ADVERTISEMENT" ADD CONSTRAINT "SYS_C0012030" CHECK ("END_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."ADVERTISEMENT" ADD CONSTRAINT "SYS_C0012031" CHECK ("COST_FOR_SELLER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."ADVERTISEMENT" ADD CONSTRAINT "SYS_C0012032" CHECK ("PICTURE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CART_ITEM
-- ----------------------------
ALTER TABLE "ZARAD"."CART_ITEM" ADD CONSTRAINT "CART_ITEM_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "CUSTOMER_ID");

-- ----------------------------
-- Checks structure for table CART_ITEM
-- ----------------------------
ALTER TABLE "ZARAD"."CART_ITEM" ADD CONSTRAINT "QUANTITY_MIN" CHECK (QUANTITY>0) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CATEGORY
-- ----------------------------
ALTER TABLE "ZARAD"."CATEGORY" ADD CONSTRAINT "CATEGORY_PK" PRIMARY KEY ("CATEGORY_ID");

-- ----------------------------
-- Checks structure for table CATEGORY
-- ----------------------------
ALTER TABLE "ZARAD"."CATEGORY" ADD CONSTRAINT "SYS_C0011595" CHECK ("CATEGORY_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CUSTOMER
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "CUSTOMER_ID_PK" PRIMARY KEY ("CUSTOMER_ID");

-- ----------------------------
-- Uniques structure for table CUSTOMER
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011544" UNIQUE ("EMAIL_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table CUSTOMER
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011534" CHECK ("FIRST_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011535" CHECK ("LAST_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011536" CHECK ("AREA" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011537" CHECK ("CITY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011538" CHECK ("PHONE_NUMBER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011539" CHECK ("DOB" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011540" CHECK ("EMAIL_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011541" CHECK ("LOCATION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER" ADD CONSTRAINT "SYS_C0011542" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CUSTOMER_CARE_EMPLOYEE
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_CARE_EMPLOYEE" ADD CONSTRAINT "CUSTOMER_CARE_EMPLOYEE_PK" PRIMARY KEY ("EMPLOYEE_ID");

-- ----------------------------
-- Primary Key structure for table CUSTOMER_CASH_TRANSACTION
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_CASH_TRANSACTION" ADD CONSTRAINT "CUSTOMER_CASH_TRANSATION_PK" PRIMARY KEY ("TRANSACTION_ID");

-- ----------------------------
-- Checks structure for table CUSTOMER_CASH_TRANSACTION
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_CASH_TRANSACTION" ADD CONSTRAINT "SYS_C0011650" CHECK ("ORDER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CUSTOMER_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_ORDER" ADD CONSTRAINT "ORDER_PK" PRIMARY KEY ("ORDER_ID");

-- ----------------------------
-- Checks structure for table CUSTOMER_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_ORDER" ADD CONSTRAINT "SYS_C0011574" CHECK ("CUSTOMER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER_ORDER" ADD CONSTRAINT "SYS_C0011575" CHECK ("ORDER_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER_ORDER" ADD CONSTRAINT "SYS_C0012290" CHECK ("SELLER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table CUSTOMER_WALLET_RECHARGE
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_WALLET_RECHARGE" ADD CONSTRAINT "CUSTOMER_WALLET_RECHARGE_PK" PRIMARY KEY ("TRANSACTION_ID");

-- ----------------------------
-- Checks structure for table CUSTOMER_WALLET_RECHARGE
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_WALLET_RECHARGE" ADD CONSTRAINT "SYS_C0011654" CHECK ("CUSTOMER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table DELIVERY_GUY
-- ----------------------------
ALTER TABLE "ZARAD"."DELIVERY_GUY" ADD CONSTRAINT "DELIVERY_GUY_PK" PRIMARY KEY ("EMPLOYEE_ID");

-- ----------------------------
-- Primary Key structure for table EMPLOYEE
-- ----------------------------
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "EMPLOYEE_PK" PRIMARY KEY ("EMPLOYEE_ID");

-- ----------------------------
-- Uniques structure for table EMPLOYEE
-- ----------------------------
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011557" UNIQUE ("PHONE_NUMBER") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011558" UNIQUE ("EMAIL_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table EMPLOYEE
-- ----------------------------
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "EMPLOYEE_SAL_MIN" CHECK (SALARY >= 0) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011545" CHECK ("FIRST_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011546" CHECK ("LAST_NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011547" CHECK ("SALARY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011548" CHECK ("PHONE_NUMBER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011549" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011550" CHECK ("AREA" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011551" CHECK ("CITY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011552" CHECK ("PICTURE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011553" CHECK ("EMAIL_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."EMPLOYEE" ADD CONSTRAINT "SYS_C0011554" CHECK ("DOB" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table OFFER
-- ----------------------------
ALTER TABLE "ZARAD"."OFFER" ADD CONSTRAINT "OFFER_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "OFFER_NUMBER");

-- ----------------------------
-- Checks structure for table OFFER
-- ----------------------------
ALTER TABLE "ZARAD"."OFFER" ADD CONSTRAINT "SYS_C0011616" CHECK ("START_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."OFFER" ADD CONSTRAINT "SYS_C0011617" CHECK ("PERCENTAGE_DISCOUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."OFFER" ADD CONSTRAINT "SYS_C0012360" CHECK ("MINIMUM_QUANTITY_PURCHASED" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table ORDERED_ITEMS
-- ----------------------------
ALTER TABLE "ZARAD"."ORDERED_ITEMS" ADD CONSTRAINT "ORDERED_ITEMS_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "ORDER_ID", "ITEM_NUMBER");

-- ----------------------------
-- Primary Key structure for table PRODUCT
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "PRODUCT_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID");

-- ----------------------------
-- Checks structure for table PRODUCT
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "SYS_C0011597" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "SYS_C0011598" CHECK ("CATEGORY_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "SYS_C0011599" CHECK ("DESCRIPTION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "SYS_C0011600" CHECK ("EXPECTED_TIME_TO_DELIVER" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "SYS_C0011893" CHECK ("PRICE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "SYS_C0014067" CHECK ("LAST_UPDATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Triggers structure for table PRODUCT
-- ----------------------------
CREATE TRIGGER "ZARAD"."PRICE_TRIGGER" BEFORE UPDATE OF "PRICE" ON "ZARAD"."PRODUCT" REFERENCING OLD AS "OLD" NEW AS "NEW" FOR EACH ROW 
DECLARE
BEGIN
	INSERT INTO PRODUCT_HISTORY VALUES(:OLD.PRODUCT_ID, :OLD.SELLER_ID, :OLD.LAST_UPDATE, SYSDATE, :OLD.PRICE);
END;
/

-- ----------------------------
-- Primary Key structure for table PRODUCT_FEATURE
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_FEATURE" ADD CONSTRAINT "PRODUCT_FEATURE_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "FEATURE_NUMBER");

-- ----------------------------
-- Checks structure for table PRODUCT_FEATURE
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_FEATURE" ADD CONSTRAINT "SYS_C0011612" CHECK ("FEATURE_DESCRIPTION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table PRODUCT_HISTORY
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_HISTORY" ADD CONSTRAINT "PRODUCT_HISTORY_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "END_DATE");

-- ----------------------------
-- Checks structure for table PRODUCT_HISTORY
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_HISTORY" ADD CONSTRAINT "SYS_C0014154" CHECK ("START_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT_HISTORY" ADD CONSTRAINT "SYS_C0014155" CHECK ("PRICE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table PRODUCT_PICTURE
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_PICTURE" ADD CONSTRAINT "PRODUCT_PICTURE_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "PICTURE_NUMBER");

-- ----------------------------
-- Primary Key structure for table PRODUCT_UNIT
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_UNIT" ADD CONSTRAINT "PRODUCT_UNIT_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "ITEM_NUMBER");

-- ----------------------------
-- Checks structure for table PRODUCT_UNIT
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_UNIT" ADD CONSTRAINT "SYS_C0011608" CHECK ("STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table PURCHASE_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."PURCHASE_ORDER" ADD CONSTRAINT "PURCHASE_ORDER_PK" PRIMARY KEY ("ORDER_ID");

-- ----------------------------
-- Checks structure for table PURCHASE_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."PURCHASE_ORDER" ADD CONSTRAINT "SYS_C0011584" CHECK ("DELIVERY_EMPLOYEE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PURCHASE_ORDER" ADD CONSTRAINT "SYS_C0011585" CHECK ("DELIVERY_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PURCHASE_ORDER" ADD CONSTRAINT "SYS_C0012294" CHECK ("PAYMENT_METHOD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table RETURN_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."RETURN_ORDER" ADD CONSTRAINT "RETURN_ORDER_PK" PRIMARY KEY ("ORDER_ID");

-- ----------------------------
-- Checks structure for table RETURN_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."RETURN_ORDER" ADD CONSTRAINT "SYS_C0014187" CHECK ("CUSTOMER_CARE_EMPLOYEE_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."RETURN_ORDER" ADD CONSTRAINT "SYS_C0014188" CHECK ("APPROVAL_STATUS" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table REVIEW
-- ----------------------------
ALTER TABLE "ZARAD"."REVIEW" ADD CONSTRAINT "REVIEW_PK" PRIMARY KEY ("PRODUCT_ID", "SELLER_ID", "CUSTOMER_ID");

-- ----------------------------
-- Checks structure for table REVIEW
-- ----------------------------
ALTER TABLE "ZARAD"."REVIEW" ADD CONSTRAINT "SYS_C0011631" CHECK ("REVIEW_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."REVIEW" ADD CONSTRAINT "SYS_C0011632" CHECK ("RATING" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table SELLER
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SELLER_PK" PRIMARY KEY ("SELLER_ID");

-- ----------------------------
-- Uniques structure for table SELLER
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011570" UNIQUE ("NAME") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011571" UNIQUE ("EMAIL_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Checks structure for table SELLER
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011563" CHECK ("NAME" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011564" CHECK ("AREA" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011565" CHECK ("CITY" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011566" CHECK ("EMAIL_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011567" CHECK ("LOCATION" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."SELLER" ADD CONSTRAINT "SYS_C0011568" CHECK ("PASSWORD" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table SELLER_PHONE_NUMBER
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER_PHONE_NUMBER" ADD CONSTRAINT "SELLER_PHONE_NUMBER_PK" PRIMARY KEY ("SELLER_ID", "PHONE_NUMBER");

-- ----------------------------
-- Primary Key structure for table SELLER_TRANSACTION
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER_TRANSACTION" ADD CONSTRAINT "SELLER_TRANSACTION_PK" PRIMARY KEY ("TRANSACTION_ID");

-- ----------------------------
-- Checks structure for table SELLER_TRANSACTION
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER_TRANSACTION" ADD CONSTRAINT "SYS_C0011658" CHECK ("SELLER_ID" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Primary Key structure for table TRANSACTIONS
-- ----------------------------
ALTER TABLE "ZARAD"."TRANSACTIONS" ADD CONSTRAINT "TRANSACTIONS_PK" PRIMARY KEY ("TRANSACTION_ID");

-- ----------------------------
-- Checks structure for table TRANSACTIONS
-- ----------------------------
ALTER TABLE "ZARAD"."TRANSACTIONS" ADD CONSTRAINT "SYS_C0011646" CHECK ("TRANSACTIONS_DATE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."TRANSACTIONS" ADD CONSTRAINT "SYS_C0011647" CHECK ("AMOUNT" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."TRANSACTIONS" ADD CONSTRAINT "SYS_C0011648" CHECK ("SERVICE_CHARGE_PERCENTAGE" IS NOT NULL) NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ADMIN
-- ----------------------------
ALTER TABLE "ZARAD"."ADMIN" ADD CONSTRAINT "ADMIN_FK" FOREIGN KEY ("EMPLOYEE_ID") REFERENCES "ZARAD"."EMPLOYEE" ("EMPLOYEE_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ADVERTISEMENT
-- ----------------------------
ALTER TABLE "ZARAD"."ADVERTISEMENT" ADD CONSTRAINT "ADVERTISEMENT_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."ADVERTISEMENT" ADD CONSTRAINT "ADVERTISEMENT_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CART_ITEM
-- ----------------------------
ALTER TABLE "ZARAD"."CART_ITEM" ADD CONSTRAINT "CART_ITEM_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CART_ITEM" ADD CONSTRAINT "CART_ITEM_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CART_ITEM" ADD CONSTRAINT "CART_ITEM_FK3" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "ZARAD"."CUSTOMER" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CUSTOMER_CARE_EMPLOYEE
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_CARE_EMPLOYEE" ADD CONSTRAINT "CUSTOMER_CARE_EMPLOYEE_FK" FOREIGN KEY ("EMPLOYEE_ID") REFERENCES "ZARAD"."EMPLOYEE" ("EMPLOYEE_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CUSTOMER_CASH_TRANSACTION
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_CASH_TRANSACTION" ADD CONSTRAINT "CUSTOMER_CASH_TRANSATION_FK1" FOREIGN KEY ("TRANSACTION_ID") REFERENCES "ZARAD"."TRANSACTIONS" ("TRANSACTION_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER_CASH_TRANSACTION" ADD CONSTRAINT "CUSTOMER_CASH_TRANSATION_FK2" FOREIGN KEY ("ORDER_ID") REFERENCES "ZARAD"."CUSTOMER_ORDER" ("ORDER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CUSTOMER_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_ORDER" ADD CONSTRAINT "ORDER_FK" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "ZARAD"."CUSTOMER" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER_ORDER" ADD CONSTRAINT "ORDER_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table CUSTOMER_WALLET_RECHARGE
-- ----------------------------
ALTER TABLE "ZARAD"."CUSTOMER_WALLET_RECHARGE" ADD CONSTRAINT "CUSTOMER_WALLET_RECHARGE_FK1" FOREIGN KEY ("TRANSACTION_ID") REFERENCES "ZARAD"."TRANSACTIONS" ("TRANSACTION_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."CUSTOMER_WALLET_RECHARGE" ADD CONSTRAINT "CUSTOMER_WALLET_RECHARGE_FK2" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "ZARAD"."CUSTOMER" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table DELIVERY_GUY
-- ----------------------------
ALTER TABLE "ZARAD"."DELIVERY_GUY" ADD CONSTRAINT "DELIVERY_GUY_FK" FOREIGN KEY ("EMPLOYEE_ID") REFERENCES "ZARAD"."EMPLOYEE" ("EMPLOYEE_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table OFFER
-- ----------------------------
ALTER TABLE "ZARAD"."OFFER" ADD CONSTRAINT "OFFER_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."OFFER" ADD CONSTRAINT "OFFER_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table ORDERED_ITEMS
-- ----------------------------
ALTER TABLE "ZARAD"."ORDERED_ITEMS" ADD CONSTRAINT "ORDERED_ITEMS_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID", "ITEM_NUMBER") REFERENCES "ZARAD"."PRODUCT_UNIT" ("PRODUCT_ID", "SELLER_ID", "ITEM_NUMBER") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."ORDERED_ITEMS" ADD CONSTRAINT "ORDERED_ITEMS_FK2" FOREIGN KEY ("ORDER_ID") REFERENCES "ZARAD"."CUSTOMER_ORDER" ("ORDER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PRODUCT
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "PRODUCT_FK1" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT" ADD CONSTRAINT "PRODUCT_FK2" FOREIGN KEY ("CATEGORY_ID") REFERENCES "ZARAD"."CATEGORY" ("CATEGORY_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PRODUCT_FEATURE
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_FEATURE" ADD CONSTRAINT "PRODUCT_FEATURE_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT_FEATURE" ADD CONSTRAINT "PRODUCT_FEATURE_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PRODUCT_HISTORY
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_HISTORY" ADD CONSTRAINT "PRODUCT_HISTORY_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PRODUCT_PICTURE
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_PICTURE" ADD CONSTRAINT "PRODUCT_PICTURE_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT_PICTURE" ADD CONSTRAINT "PRODUCT_PICTURE_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PRODUCT_UNIT
-- ----------------------------
ALTER TABLE "ZARAD"."PRODUCT_UNIT" ADD CONSTRAINT "PRODUCT_UNIT_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PRODUCT_UNIT" ADD CONSTRAINT "PRODUCT_UNIT_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table PURCHASE_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."PURCHASE_ORDER" ADD CONSTRAINT "PURCHASE_ORDER_FK1" FOREIGN KEY ("ORDER_ID") REFERENCES "ZARAD"."CUSTOMER_ORDER" ("ORDER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."PURCHASE_ORDER" ADD CONSTRAINT "PURCHASE_ORDER_FK2" FOREIGN KEY ("DELIVERY_EMPLOYEE_ID") REFERENCES "ZARAD"."DELIVERY_GUY" ("EMPLOYEE_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table RETURN_ORDER
-- ----------------------------
ALTER TABLE "ZARAD"."RETURN_ORDER" ADD CONSTRAINT "RETURN_ORDER_FK1" FOREIGN KEY ("CUSTOMER_CARE_EMPLOYEE_ID") REFERENCES "ZARAD"."CUSTOMER_CARE_EMPLOYEE" ("EMPLOYEE_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."RETURN_ORDER" ADD CONSTRAINT "RETURN_ORDER_FK2" FOREIGN KEY ("ORDER_ID") REFERENCES "ZARAD"."CUSTOMER_ORDER" ("ORDER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table REVIEW
-- ----------------------------
ALTER TABLE "ZARAD"."REVIEW" ADD CONSTRAINT "REVIEW_FK1" FOREIGN KEY ("PRODUCT_ID", "SELLER_ID") REFERENCES "ZARAD"."PRODUCT" ("PRODUCT_ID", "SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."REVIEW" ADD CONSTRAINT "REVIEW_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."REVIEW" ADD CONSTRAINT "REVIEW_FK3" FOREIGN KEY ("CUSTOMER_ID") REFERENCES "ZARAD"."CUSTOMER" ("CUSTOMER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table SELLER_PHONE_NUMBER
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER_PHONE_NUMBER" ADD CONSTRAINT "SELLER_PHONE_NUMBER_FK" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;

-- ----------------------------
-- Foreign Keys structure for table SELLER_TRANSACTION
-- ----------------------------
ALTER TABLE "ZARAD"."SELLER_TRANSACTION" ADD CONSTRAINT "SELLER_TRANSACTION_FK1" FOREIGN KEY ("TRANSACTION_ID") REFERENCES "ZARAD"."TRANSACTIONS" ("TRANSACTION_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
ALTER TABLE "ZARAD"."SELLER_TRANSACTION" ADD CONSTRAINT "SELLER_TRANSACTION_FK2" FOREIGN KEY ("SELLER_ID") REFERENCES "ZARAD"."SELLER" ("SELLER_ID") NOT DEFERRABLE INITIALLY IMMEDIATE NORELY VALIDATE;
