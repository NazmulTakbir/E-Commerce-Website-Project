CREATE OR REPLACE PROCEDURE ADD_ITEM(
	SELLER_EMAIL IN VARCHAR2,
	ID IN NUMBER,
	NAME IN VARCHAR2,
	PRICE IN NUMBER,
	DELIVERY_TIME IN NUMBER,
	CATEGORY IN VARCHAR2,
	DESCRIPTION IN VARCHAR2,
	IN_STOCK IN NUMBER,
	FEATURE1 IN VARCHAR2,
	FEATURE2 IN VARCHAR2,
	FEATURE3 IN VARCHAR2,
	FEATURE4 IN VARCHAR2,
	FEATURE5 IN VARCHAR2,
	FEATURE6 IN VARCHAR2,
	PIC1 IN BLOB :=NULL,
	PIC2 IN BLOB :=NULL,
	PIC3 IN BLOB :=NULL,
	PIC4 IN BLOB :=NULL) IS
	VERIFIED_ID NUMBER;
	SID NUMBER;
	FEATURE_NUMBER NUMBER;
	PICTURE_NUMBER NUMBER;
	VERIFIED_IN_STOCK NUMBER;
BEGIN

	SAVEPOINT BEFORE_INSERT;
	
	
	
	IF ID = -1 THEN
		SELECT PRODUCT_ID_SEQ.NEXTVAL INTO VERIFIED_ID FROM DUAL;
	ELSE
		SELECT NVL(PRODUCT_ID, -1) INTO VERIFIED_ID FROM PRODUCT WHERE PRODUCT_ID = ID;
		IF VERIFIED_ID = -1 THEN
			SELECT PRODUCT_ID_SEQ.NEXTVAL INTO VERIFIED_ID FROM DUAL;
		END IF;
	END IF;
	
	
	
	SELECT SELLER_ID INTO SID FROM SELLER WHERE EMAIL_ID = SELLER_EMAIL;
	
	
	
	INSERT INTO PRODUCT VALUES (VERIFIED_ID, SID, NAME, (SELECT CATEGORY_ID FROM CATEGORY WHERE 
	CATEGORY_NAME = CATEGORY), DESCRIPTION, DELIVERY_TIME, PRICE, SYSDATE);
	
	
	
	FEATURE_NUMBER := 0;
	
	IF NOT FEATURE1 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE1);
	END IF;
	
	IF NOT FEATURE2 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE2);
	END IF;
	
	IF NOT FEATURE3 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE3);
	END IF;
	
	IF NOT FEATURE4 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE4);
	END IF;
	
	IF NOT FEATURE5 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE5);
	END IF;
	
	IF NOT FEATURE6 = '' THEN
		FEATURE_NUMBER := FEATURE_NUMBER + 1;
		INSERT INTO PRODUCT_FEATURE VALUES(VERIFIED_ID, SID, FEATURE_NUMBER, FEATURE6);
	END IF;
								
								
								
	PICTURE_NUMBER := 0;
	
	IF PIC1 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC1);
	END IF;
	
	IF PIC2 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC2);
	END IF;
	
	IF PIC3 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC3);
	END IF;
	
	IF PIC4 IS NOT NULL THEN
		PICTURE_NUMBER := PICTURE_NUMBER + 1;
		INSERT INTO PRODUCT_PICTURE VALUES(VERIFIED_ID, SID, PICTURE_NUMBER, PIC4);
	END IF;
	
	IF IN_STOCK > 0 THEN
		VERIFIED_IN_STOCK := LEAST(IN_STOCK, 1000000);
		FOR ITEM_NO IN 1..VERIFIED_IN_STOCK
		LOOP
			INSERT INTO PRODUCT_UNIT VALUES(VERIFIED_ID, SID, ITEM_NO, 'Not Sold');
		END LOOP;
	END IF;
								
EXCEPTION
	WHEN OTHERS THEN
		ROLLBACK TO BEFORE_INSERT;
		RAISE;
END;